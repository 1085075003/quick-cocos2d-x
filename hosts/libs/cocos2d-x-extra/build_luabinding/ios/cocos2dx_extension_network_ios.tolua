
$#include "network/CCNetwork.h"

$using namespace cocos2d::extra;

#define kCCHTTPRequestMethodGET  0
#define kCCHTTPRequestMethodPOST 1

#define kCCHTTPRequestAcceptEncodingIdentity 0
#define kCCHTTPRequestAcceptEncodingGzip     1
#define kCCHTTPRequestAcceptEncodingDeflate  2

#define kCCHTTPRequestStateIdle       0
#define kCCHTTPRequestStateInProgress 1
#define kCCHTTPRequestStateCompleted  2
#define kCCHTTPRequestStateCancelled  3
#define kCCHTTPRequestStateCleared    4

class CCHTTPRequest : public CCObject
{
    static CCHTTPRequest* createWithUrlLua(LUA_FUNCTION listener,
                                           const char* url,
                                           int method = kCCHTTPRequestMethodGET);
    void setRequestUrl(const char* url);
    void addRequestHeader(const char* header);
    void addPOSTValue(const char* key, const char* value);
    void setPOSTData(const char* data);
    void setAcceptEncoding(int acceptEncoding);
    void setTimeout(float timeout);
    void start(void);
    void cancel(void);
    void clearDelegatesAndCancel(void);
    int getState(void);
    int getResponseStatusCode(void);
    const string getResponseString(void);
    LUA_STRING getResponseDataLua(void);
    int getResponseDataLength(void);
    int saveResponseData(const char* filename);
    int getErrorCode(void);
    const char* getErrorMessage(void);
};

class CCNetwork
{
    static bool isLocalWiFiAvailable(void);
    static bool isInternetConnectionAvailable(void);
    static bool isHostNameReachable(const char* hostName);
    static CCNetworkStatus getInternetConnectionStatus(void);

    static CCHTTPRequest* createHTTPRequestLua(LUA_FUNCTION listener,
                                               const char* url,
                                               int method = kCCHTTPRequestMethodGET);
};
